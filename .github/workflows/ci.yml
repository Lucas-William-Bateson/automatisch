name: Automatisch CI
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  linter:
    runs-on: self-hosted
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '22.15.0'
          cache: 'yarn'
          cache-dependency-path: packages/backend/yarn.lock
      - name: Enable Corepack
        run: corepack enable
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - run: yarn --frozen-lockfile
        working-directory: packages/backend
      - run: yarn lint
        working-directory: packages/backend
      - run: echo "🍏 This job's status is ${{ job.status }}."
  start-backend-server:
    runs-on: self-hosted
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '22.15.0'
          cache: 'yarn'
          cache-dependency-path: packages/backend/yarn.lock
      - name: Enable Corepack
        run: corepack enable
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - run: yarn --frozen-lockfile
        working-directory: packages/backend
      - run: yarn start
        working-directory: packages/backend
        env:
          ENCRYPTION_KEY: sample_encryption_key
          WEBHOOK_SECRET_KEY: sample_webhook_secret_key
      - run: echo "🍏 This job's status is ${{ job.status }}."
  start-backend-worker:
    runs-on: self-hosted
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '22.15.0'
          cache: 'yarn'
          cache-dependency-path: packages/backend/yarn.lock
      - name: Enable Corepack
        run: corepack enable
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - run: yarn --frozen-lockfile
        working-directory: packages/backend
      - run: yarn start:worker
        working-directory: packages/backend
        env:
          ENCRYPTION_KEY: sample_encryption_key
          WEBHOOK_SECRET_KEY: sample_webhook_secret_key
      - run: echo "🍏 This job's status is ${{ job.status }}."
  build-web:
    runs-on: self-hosted
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '22.15.0'
          cache: 'yarn'
          cache-dependency-path: packages/web/yarn.lock
      - name: Enable Corepack
        run: corepack enable
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - run: yarn --frozen-lockfile
        working-directory: packages/web
      - run: yarn build
        working-directory: packages/web
        env:
          CI: false
      - run: echo "🍏 This job's status is ${{ job.status }}."
  deploy:
    needs: [build-web]
    runs-on: self-hosted
    env:
      ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      WEBHOOK_SECRET_KEY: ${{ secrets.WEBHOOK_SECRET_KEY }}
      APP_SECRET_KEY: ${{ secrets.APP_SECRET_KEY }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v3
      - name: Deploy with Docker Compose
        run: |
          docker compose -f docker-compose.yml up -d --build
